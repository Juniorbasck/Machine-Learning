# -*- coding: utf-8 -*-
"""Entrega Projeto 2Tarefa

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KE5uEK8CmB7l1WQTR9JGThp125EEmTHX
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

url = '/content/heart.csv'
heart_data = pd.read_csv(url)

heart_data.head()

def eda_summary(data):
    print(data.info())

    print(data.describe())

    print("Valores nulos:\n", data.isnull().sum())

    plt.figure(figsize=(8, 5))
    sns.countplot(x='target', data=data)
    plt.title("Distribuição de Doença Cardíaca (0 = Ausência, 1 = Presença)")
    plt.show()

    plt.figure(figsize=(12, 8))
    sns.heatmap(data.corr(), annot=True, fmt=".2f", cmap="coolwarm")
    plt.title("Matriz de Correlação")
    plt.show()

eda_summary(heart_data)

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

X = heart_data.drop(columns='target')
y = heart_data['target']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

log_model = LogisticRegression(max_iter=1000)
log_model.fit(X_train, y_train)
y_pred_log = log_model.predict(X_test)
print(f'Accuracy Regressão Logística: {accuracy_score(y_test, y_pred_log)}')

tree_model = DecisionTreeClassifier()
tree_model.fit(X_train, y_train)
y_pred_tree = tree_model.predict(X_test)
print(f'Accuracy Árvore de Decisão: {accuracy_score(y_test, y_pred_tree)}')

svm_model = SVC()
svm_model.fit(X_train, y_train)
y_pred_svm = svm_model.predict(X_test)
print(f'Accuracy SVM: {accuracy_score(y_test, y_pred_svm)}')

from sklearn.metrics import precision_score, recall_score, f1_score

def evaluate_model(y_test, y_pred, model_name):
    accuracy = accuracy_score(y_test, y_pred)
    precision = precision_score(y_test, y_pred)
    recall = recall_score(y_test, y_pred)
    f1 = f1_score(y_test, y_pred)

    print(f"Modelo: {model_name}")
    print(f" - Acurácia: {accuracy:.4f}")
    print(f" - Precisão: {precision:.4f}")
    print(f" - Recall: {recall:.4f}")
    print(f" - F1-Score: {f1:.4f}")
    print("\n")

# Avaliar cada modelo
evaluate_model(y_test, y_pred_log, "Regressão Logística")
evaluate_model(y_test, y_pred_tree, "Árvore de Decisão")
evaluate_model(y_test, y_pred_svm, "SVM")